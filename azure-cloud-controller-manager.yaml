apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloud-controller-manager
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cloud-controller-manager
rules:
- apiGroups: [""]
  resources: ["events", "nodes", "services", "serviceaccounts", "persistentvolumes", "endpoints"]
  verbs: ["create", "patch", "update", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:cloud-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cloud-controller-manager
subjects:
- kind: ServiceAccount
  name: cloud-controller-manager
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-controller-manager
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloud-controller-manager
  template:
    metadata:
      labels:
        app: cloud-controller-manager
    spec:
      serviceAccountName: cloud-controller-manager
      containers:
      - name: cloud-controller-manager
        image: mcr.microsoft.com/oss/kubernetes/azure-cloud-controller-manager:v1.30.4  # Use the latest version as needed
        command:
        - /usr/local/bin/cloud-controller-manager
        args:
        - --cloud-provider=azure
        - --cluster-name=kubernetes  # Replace with your cluster name
        - --controllers=*
        - --leader-elect=true
        - --allocate-node-cidrs=true
        - --configure-cloud-routes=true
        - --cluster-cidr=10.240.0.0/16  # Adjust according to your network configuration
        - --route-reconciliation-period=10s
        ports:
        - containerPort: 10267